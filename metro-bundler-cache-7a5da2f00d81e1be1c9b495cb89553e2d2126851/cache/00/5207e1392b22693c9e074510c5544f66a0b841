Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/anjali/Eatburp/components/SearchBar.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    SearchBar: {
        displayName: 'SearchBar'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/home/anjali/Eatburp/components/SearchBar.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var SearchBar = _wrapComponent('SearchBar')(function (_React$Component) {
    _inherits(SearchBar, _React$Component);

    function SearchBar(props) {
        _classCallCheck(this, SearchBar);

        return _possibleConstructorReturn(this, (SearchBar.__proto__ || Object.getPrototypeOf(SearchBar)).call(this, props));
    }

    _createClass(SearchBar, [{
        key: 'render',
        value: function render() {
            return _react3.default.createElement(
                _reactNative.View,
                { style: {
                        paddingLeft: 20,
                        justifyContent: 'center',
                        marginRight: 10,
                        marginTop: 10,
                        marginLeft: 10,
                        marginBottom: 10,
                        backgroundColor: '#fff',
                        height: 45,
                        borderTopLeftRadius: 2,
                        borderTopRightRadius: 2,
                        borderBottomLeftRadius: 2,
                        borderBottomRightRadius: 2,

                        borderWidth: 1,
                        borderColor: '#e9e9e9'
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 21
                    }
                },
                _react3.default.createElement(_reactNative.TextInput, {
                    onFocus: this.props.onPress,
                    onChangeText: this.props.onChangeText,
                    placeholder: 'Search',
                    underlineColorAndroid: 'transparent',
                    style: {
                        fontSize: 15,
                        textAlign: 'auto',
                        color: '#878787'

                    },

                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 39
                    }
                })
            );
        }
    }]);

    return SearchBar;
}(_react3.default.Component));

exports.default = SearchBar;


var styles = {
    container: {
        flex: 1
    }
};
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/anjali/Eatburp/App.js';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _RootNavigation = require('./navigation/RootNavigation');

var _RootNavigation2 = _interopRequireDefault(_RootNavigation);

var _expo = require('expo');

var _expo2 = _interopRequireDefault(_expo);

var _vectorIcons = require('@expo/vector-icons');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  App: {
    displayName: 'App'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/anjali/Eatburp/App.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var App = _wrapComponent('App')(function (_React$Component) {
  _inherits(App, _React$Component);

  function App() {
    var _ref,
        _this2 = this;

    var _temp, _this, _ret;

    _classCallCheck(this, App);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isReady: false
    }, _this._loadAssetsAsync = function _callee() {
      return regeneratorRuntime.async(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt('return', _expo.Font.loadAsync(_extends({}, _vectorIcons.Ionicons.font, {
                'OpenSans-Light': require('./assets/fonts/OpenSans-Light.ttf'),
                'OpenSans': require('./assets/fonts/OpenSans-Regular.ttf'),
                'OpenSans-Bold': require('./assets/fonts/OpenSans-Semibold.ttf'),
                'Pacifico': require('./assets/fonts/Pacifico-Regular.ttf'),
                'Gloria': require('./assets/fonts/GloriaHallelujah.ttf')
              })));

            case 1:
            case 'end':
              return _context.stop();
          }
        }
      }, null, _this2);
    }, _this._loadDataAndAssetsAsync = function _callee2() {
      return regeneratorRuntime.async(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt('return', Promise.all(_this._loadAssetsAsync()));

            case 1:
            case 'end':
              return _context2.stop();
          }
        }
      }, null, _this2);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(App, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      if (!this.state.isReady) {
        return _react3.default.createElement(_expo2.default.AppLoading, {
          startAsync: this._loadDataAndAssetsAsync,
          onError: function onError(e) {
            return console.error(e);
          },
          onFinish: function onFinish() {
            _this3.setState({
              isReady: true
            });
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 33
          }
        });
      }
      return _react3.default.createElement(_RootNavigation2.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 46
        }
      });
    }
  }]);

  return App;
}(_react3.default.Component));

exports.default = App;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center'
  }
});
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/anjali/eatburpRedux-master/screens/FoodMapScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _Maps = require('../components/Maps');

var _SilverMapStyle = require('../styles/SilverMapStyle.json');

var _SilverMapStyle2 = _interopRequireDefault(_SilverMapStyle);

var _place = require('../data/place');

var _place2 = _interopRequireDefault(_place);

var _expo = require('expo');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  FoodMapScreen: {
    displayName: 'FoodMapScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/anjali/eatburpRedux-master/screens/FoodMapScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var ASPECT_RATIO = width / height;
var LATITUDE = 0;
var LONGITUDE = 0;
var LATITUDE_DELTA = 0.0922;
var LONGITUDE_DELTA = 0.0421;

var FoodMapScreen = _wrapComponent('FoodMapScreen')(function (_React$Component) {
  _inherits(FoodMapScreen, _React$Component);

  function FoodMapScreen(props) {
    var _this2 = this;

    _classCallCheck(this, FoodMapScreen);

    var _this = _possibleConstructorReturn(this, (FoodMapScreen.__proto__ || Object.getPrototypeOf(FoodMapScreen)).call(this, props));

    _this._getLocationAsync = function _callee() {
      var _ref, status, location;

      return regeneratorRuntime.async(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(_expo.Permissions.askAsync(_expo.Permissions.LOCATION));

            case 2:
              _ref = _context.sent;
              status = _ref.status;

              if (status !== 'granted') {
                _this.setState({
                  errorMessage: 'Permission to access location was denied'
                });
              }

              _context.next = 7;
              return regeneratorRuntime.awrap(_expo.Location.getCurrentPositionAsync({ enableHighAccuracy: true }));

            case 7:
              location = _context.sent;

              console.log("Location---------------", location);
              _this.setState({ location: location });
              _this.setState({
                region: {
                  latitude: location.coords.latitude,
                  longitude: location.coords.longitude,
                  latitudeDelta: LATITUDE_DELTA,
                  longitudeDelta: LONGITUDE_DELTA,
                  error: null
                }
              });

            case 11:
            case 'end':
              return _context.stop();
          }
        }
      }, null, _this2);
    };

    _this.state = {
      region: {
        latitude: 0,
        longitude: 0,
        latitudeDelta: LATITUDE_DELTA,
        longitudeDelta: LONGITUDE_DELTA,
        error: null
      },
      initialRegion: {
        latitude: 37.78825,
        longitude: -122.4324,
        latitudeDelta: 0.0922,
        longitudeDelta: 0.0421
      },
      location: null,
      coordinates: [{
        latitude: 22.756743,
        longitude: 75.887344
      }, {
        latitude: 22.761304,
        longitude: 75.887549
      }],
      place: _place2.default
    };
    return _this;
  }

  _createClass(FoodMapScreen, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._getLocationAsync();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var text = 'waiting....';
      text = JSON.stringify(this.state.location);
      console.log("regions------------------", this.state.region);
      var coords = this.state.coordinates;
      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 112
          }
        },
        _react3.default.createElement(
          _expo.MapView,
          { style: styles.map,
            initialRegion: this.state.initialRegion,
            region: this.state.region,
            customMapStyle: _SilverMapStyle2.default,
            onRegionChange: function onRegionChange(region) {
              return _this3.setState({ region: region });
            },
            onRegionChangeComplete: function onRegionChangeComplete(region) {
              return _this3.setState({ region: region });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 113
            }
          },
          this.state.place.map(function (coords, key) {
            return _react3.default.createElement(_expo.MapView.Marker, {
              key: key,
              title: coords.name,
              coordinate: {
                latitude: coords.coordinates.latitude,
                longitude: coords.coordinates.longitude
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 121
              }
            });
          })
        ),
        _react3.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 131
            }
          },
          ' Latitude: ',
          text,
          ' '
        )
      );
    }
  }]);

  return FoodMapScreen;
}(_react3.default.Component));

exports.default = FoodMapScreen;

var styles = _reactNative.StyleSheet.create({
  container: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    justifyContent: 'flex-end',
    alignItems: 'center'
  },
  map: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  }
});